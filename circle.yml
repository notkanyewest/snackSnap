general:
  branches:
    only:
      - master

## Customize the test machine
machine:

  timezone:
    America/Los_Angeles # Set the timezone

  # Version of ruby to use
  node:
    version:
      0.10.32

  # Override /etc/hosts
  hosts:
    circlehost: 127.0.0.1
    dev.mycompany.com: 127.0.0.1

  # Add some environment variables
  environment:
    CIRCLE_ENV: test
    #DATABASE_URL: postgres://ubuntu:@127.0.0.1:5432/circle_test

## Customize checkout
#checkout:
 # post:
  #  - git submodule sync
   # - git submodule update --init # use submodules


## Customize dependencies
dependencies:
  pre:
    - wget http://downloads.sourceforge.net/project/optipng/OptiPNG/optipng-0.7.5/optipng-0.7.5.tar.gz
    - tar xvf optipng-0.7.5.tar.gz
    - cd optipng-0.7.5; ./configure; make; sudo checkinstall -y;
  override:
    - npm install # install from a different package manager
    - bower install

#  override:
 #   - bundle install: # note ':' here
  #      timeout: 180 # fail if command has no output for 3 minutes

  # we automatically cache and restore many dependencies between
  # builds. If you need to, you can add custom paths to cache:
  #cache_directories:
   # - "custom_1"   # relative to the build directory
    #- "~/custom_2" # relative to the user's home directory

## Customize database setup
#database:
 # override:
    # replace CircleCI's generated database.yml
  #  - cp config/database.yml.ci config/database.yml
   # - bundle exec rake db:create db:schema:load

## Customize test commands
#test:
 # override:
 #   - phpunit test/unit-tests # use PHPunit for testing
  #post:
   # - bundle exec rake jasmine:ci: # add an extra test type
    #    environment:
     #     RAILS_ENV: test
      #    RACK_ENV: test

## Customize deployment commands
deployment:
  production:
    branch: master
    commands:
      - git config --global user.email 'bradley.portnoy@gmail.com'
      - git config --global user.name 'Bradley Portnoy via Circle-CI'
      - grunt build && grunt buildcontrol:github
## Custom notifications
notify:
  webhooks:
    # A list of hashes representing hooks. Only the url field is supported.
    - url: https://someurl.com/hooks/circle